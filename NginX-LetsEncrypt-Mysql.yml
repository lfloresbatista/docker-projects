version: '3.7'

services:


  nginx-proxy:
    image: jwilder/nginx-proxy:0.9.0  
    container_name: NginX-Proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - lan
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - /root/docker/htpasswd:/etc/nginx/htpasswd:ro
      - confd:/etc/nginx/conf.d
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - /var/lib/docker/volumes/consistane_files/nginx.conf:/etc/nginx/nginx.conf
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:v1.12
    container_name: Lets_Encrypt
    restart: always
    networks:
      - lan
    depends_on:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - confd:/etc/nginx/conf.d
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - dhparam:/etc/nginx/dhparam:ro
  
  mysql:
    image: mysql:8.0.13
    container_name: MySQL-Server
    hostname: mysql
    restart: always
    networks:
      - lan
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: coloca-aqui-tu-contrasena-de-root
    volumes:
      - mysql-data:/var/lib/mysql
     

      
volumes:
  certs:
  confd:
  vhostd:
  html:
  dhparam:
  mysql-data:
  

networks:
  lan:
  
#REF= La mayoria del code que use fueron de dos fuentes principales la primera Pablo de Pelado Nerd que es un crack (https://github.com/pablokbs/peladonerd) y la otra de la documentacion de Docker compose (https://docs.docker.com/compose/) que lo disfruten
